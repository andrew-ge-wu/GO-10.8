<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://camel.apache.org/schema/spring
                           http://camel.apache.org/schema/spring/camel-spring.xsd
                           http://www.springframework.org/schema/jee
                           http://www.springframework.org/schema/jee/spring-jee.xsd">

  <!-- JMS listener -->
  <!--
  <bean id="jbossmq" class="org.apache.camel.component.jms.JmsComponent">
    <property name="connectionFactory" ref="jbossConnectionFactory"/>
  </bean>
  <jee:jndi-lookup id="jbossConnectionFactory" jndi-name="ConnectionFactory">
    <jee:environment>
      java.naming.provider.url=jnp://localhost:1099
      java.naming.factory.initial=org.jboss.naming.NamingContextFactory
    </jee:environment>
  </jee:jndi-lookup>
  -->

  <!-- ContentEvent to String processor -->
  <!--
  <bean id="contentEventToJsonStringProcessor" class="example.integration.ContentEventToJsonStringProcessor" />
  -->

  <camel:camelContext xmlns="http://camel.apache.org/schema/spring">
    <camel:errorHandler id="inboxErrorHandler" redeliveryPolicyRef="inboxRedeliveryPolicy" />
    <camel:redeliveryPolicyProfile id="inboxRedeliveryPolicy" maximumRedeliveries="3"
                                                              redeliveryDelay="5000"
                                                              useExponentialBackOff="true"
                                                              backOffMultiplier="3"
                                                              maximumRedeliveryDelay="60000" />

    <!-- Content xml, jar and .content import, monitoring the 'work/inbox' directory (relative to the project root).
         See http://camel.apache.org/file2.html for information about the file component -->

    <camel:route errorHandlerRef="inboxErrorHandler">
      <camel:from uri="file:work/inbox?recursive=true&amp;initialDelay=10000&amp;delay=2000&amp;readLock=changed&amp;readLockMinLength=0&amp;delete=true&amp;moveFailed=../inbox-failed-imports/${date:now:yyyy.MM.dd.HH.mm.ss}-${file:name}&amp;include=.*\.xml" />
      <camel:to uri="polopoly://sysadmin:sysadmin@content-xml" />
    </camel:route>

    <camel:route errorHandlerRef="inboxErrorHandler">
      <camel:from uri="file:work/inbox?recursive=true&amp;initialDelay=10000&amp;delay=2000&amp;readLock=changed&amp;readLockMinLength=0&amp;delete=true&amp;moveFailed=../inbox-failed-imports/${date:now:yyyy.MM.dd.HH.mm.ss}-${file:name}&amp;include=.*\.jar" />
      <camel:to uri="polopoly://sysadmin:sysadmin@content-jar" />
    </camel:route>

    <camel:route errorHandlerRef="inboxErrorHandler">
      <camel:from uri="file:work/inbox?recursive=true&amp;initialDelay=10000&amp;delay=2000&amp;readLock=changed&amp;readLockMinLength=0&amp;delete=true&amp;moveFailed=../inbox-failed-imports/${date:now:yyyy.MM.dd.HH.mm.ss}-${file:name}&amp;include=.*\.content" />
      <camel:to uri="polopoly://sysadmin:sysadmin@content-dot-content" />
    </camel:route>

    <!-- Listen to the PolopolyTopic, convert event to string and log to file -->
    <!--
    <camel:route>
      <from uri="jbossmq:topic:jms/PolopolyTopic" />
      <camel:process ref="contentEventToJsonStringProcessor" />
      <camel:to uri="file:work/outbox?fileName=contentevent.log&amp;fileExist=Append" />
    </camel:route>
    -->
  </camel:camelContext>
</beans>
