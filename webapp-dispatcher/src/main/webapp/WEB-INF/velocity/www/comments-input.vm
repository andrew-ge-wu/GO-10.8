#set($rs = $m.context.site.bean.resources.strings)
<div id="commentsForm-$elementId">
    #if($m.stack.hasCommentError)
      <div class="possibleError">
        <ul>
          #foreach ($errorKey in $m.stack.error)
            <li>$rs.blog.error.get($errorKey)</li>
          #end
        </ul>
      </div>
    #elseif($hasCommentError)
        #parse("/WEB-INF/velocity/www/blog-error.vm")  
    #end
  
      <script type="text/javascript">
      var first_time_to_render_captcha_$elementId = true;
      
      function firstTimeCaptcha$elementId() {
        if (first_time_to_render_captcha_$elementId) {
            renderCaptcha$elementId();
            first_time_to_render_captcha_$elementId = false;
        }
      }
      
    jQuery().ready(function() {
    if (polopoly.user.isLoggedIn() && polopoly.user.screenName().length > 0) {
        jQuery(".authorRealNameWrapper").html(polopoly.user.screenName());
    } else {
        jQuery(".authorRealNameWrapper").html('<input name="comment_author" id="comment_author-$elementId"' + 
                                              'value="$!m.stack.commentEchoAuthor"' + 
                                              'class="inputField" style="display: block;" type="text"/>');
    }
    
    #if($m.stack.hasCommentError || $hasCommentError)
      firstTimeCaptcha$elementId();
      jQuery("#comments_container-$elementId").show();
    #end
    
    });
    </script>
    <form>
    <input type="button" class="button submit" id="comment_this_article-$elementId" value="$rs.comments.comments" />
    </form>
    #if($m.local.content.openForComments)
    <div class="comment_contents form clearfix" style="display: none;" id="comments_container-$elementId">
      <form action="#link({"path": $m.request.originalContentPath, 'htmlEncodeLink': 'true', "":""})#commentsForm-$elementId" method="post" id="commentBlogPostForm-$elementId">
        <input name="commentsId" value="$content.contentId.contentId.contentIdString" type="hidden">
        <input type="hidden" name="action" value="CREATE_COMMENT"/>
        <label class="label" for="comment_text">$rs.comments.writecomment</label><br />
        <textarea name="comment_text" id="comment_text" rows="5" cols="40" 
                  class="inputfield" style="width: 98%;">$!m.stack.commentEchoText</textarea>
        <br />
        <label class="label" for="comment_author">$rs.comments.yourname</label><br />
        <span class="authorRealNameWrapper">
          
        </span>
      <div class="field">
        <label class="required" for="reg_captcha">$rs.captcha.wordverification <span class="required"></span></label>
        <div>$rs.comments.typeincharacters</div>
        <div id="captcha_container-$elementId" class="captcha_container">
        </div> 
        <input type="text" name="captcha_response" id="captcha_response-$elementId"/>
      </div>
        
        <br />
        <input id="submitCommentBlogPost-$elementId" class="button submit" value="$rs.comments.comment" type="submit">
      </form>
    </div>
    #else
      <div class='closedForComments'>$rs.comments.closedforwrite</div>
    #end
<script type="text/javascript">

    var validation = {
      rules: {
        comment_text: {
          required: true
        },
        comment_author: {
          required: true
        },
        captcha_response: {
          required: true
        }
      },
      messages: {
        comment_text: {
          required: "$rs.blog.error.commentTextEmpty"
        },
        comment_author: {
          required: "$rs.blog.error.commentAuthorEmpty"
        },
        captcha_response: {
          required: "$rs.blog.error.badCaptcha"
        }
      },
      submitHandler: function(form) {
        jQuery("#submitCommentBlogPost-$elementId").css("background-color", "#ccc");
        jQuery("#submitCommentBlogPost-$elementId").attr("disabled", true);
        polopoly.util.injectCSRFToken(form);

        form.submit();
      }
    };

function renderCaptcha$elementId() {
     var randNum = Math.ceil(Math.random()*10000000);
     var captchaImg = jQuery("#captcha_image-$elementId");
     if (captchaImg.length > 0) {
        captchaImg.attr("src","/captcha?" + randNum); 
     } else {
        var captcha = jQuery('#captcha_container-$elementId');
        captcha.html('<img src="/captcha?' +randNum +'" class="captcha_img" id="captcha_image-$elementId" />');
        jQuery("#captcha_image-$elementId").click(renderCaptcha$elementId);
    }
}

jQuery().ready(function() { 
    
    //jQuery("#captcha_container-$elementId").click(renderCaptcha$elementId);
    
    jQuery("#comment_this_article-$elementId").click(function() {
        firstTimeCaptcha$elementId();
        jQuery("#comments_container-$elementId").slideToggle("fast");
    });
    
});

  jQuery().ready(function() {
    /* "Error management" */  
    var validator = jQuery("#commentBlogPostForm-$elementId").validate(validation);
  });
  
</script>
</div>
