#set($rs = $m.context.site.bean.resources.strings)

<div class="element">
<div id="badBrowser">$rs.membership.badbrowser</div>

<div id="resetPasswordSuccess" class="success notification element big" style="display: none;">
  <h1>$rs.resetpassword.successheader</h1>
  <p>$rs.resetpassword.successbody</p>
</div>

<div id="resetPassword" class="resetPassword" style="display: none;">
<h1>$rs.resetpassword.resetPasswordHeader</h1>
<div id="possibleError">
</div>

<p class="intro">$rs.resetpassword.introduction</p>

<form method="post" action="/membership/resetpassword" id="resetpasswordform">       
      <div class="field">
        <label class="required" for="reset_loginname">$rs.membership.loginname <span class="required">*</span></label>
        <input size="42" type="text" name="reset_loginname" id="reset_loginname"/>
      </div>
      <div class="field">
        <label class="required" for="reset_captcha">$rs.captcha.wordverification <span class="required">*</span></label>
        <div>$rs.comments.typeincharacters</div>
        <img src="" id="reset_captchaimg" style="cursor: pointer; cursor: hand;" />
        <input size="42" type="text" name="reset_captcha" id="reset_captcha"/>
      </div>    
    <div class="button-set">
      <input type="hidden" name="reset_site" value="$m.context.site.top.bean.contentId.contentId.contentIdString"/>
      <input class="submit" type="submit" value="$rs.resetpassword.reset" id="submitResetPassword"/>
    </div>
</form>
</div>
</div>
<script type="text/javascript">    
    jQuery("#badBrowser").hide();
    
    function renderCaptcha() {
      var captcha = jQuery('#reset_captchaimg');
      randNum = Math.ceil(Math.random()*10000000);
      captcha.attr("src", "/captcha?"+randNum);
    }

    jQuery().ready(function() {
        /* Success? */
    	
        if (polopoly.util.querystringValue("reset")) {
            jQuery("#resetPasswordSuccess").show();
        } else {
            jQuery("#resetPassword").show();
            
            var validation = {
                rules: {
                    reset_loginname: {
                        required: true,
                        email: true
                    },
                    reset_captcha: {
               	        required: true
            	    }
                },
                messages: {
                    reset_loginname: {
                        required: "$rs.membership.errorRequired",
                        email: "$rs.membership.errorEmail"
                    },
                    reset_captcha: {
                        required: "$rs.membership.errorRequired"
                    }      
                },
                submitHandler: function(form) {
                    jQuery("#submitResetPassword").css("background-color", "#ccc");
                    jQuery("#submitResetPassword").attr("disabled", true);
                    form.submit();
                }
            };
            
            var validator = jQuery("#resetpasswordform").validate(validation);

            /* "Error management" */
            var errorStatus = polopoly.util.querystringValue("resetpassword_formerror");
            
            if ("down" == errorStatus) {
                jQuery("#possibleError").text("$rs.membership.serverdown");
            } else if ("captcha" == errorStatus) {
                validator.showErrors({"reset_captcha" : "$rs.captcha.error"});
            } else if ("user" == errorStatus) {
		validator.showErrors({"reset_loginname" : "$rs.resetpassword.invaliduser"});
            }

            renderCaptcha();
            jQuery("#reset_captchaimg").click(renderCaptcha);
        }
    });
</script>
